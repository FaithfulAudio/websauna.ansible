- name: Install dependencies
  become: yes
  become_user: root
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - git
    - supervisor
    - build-essential
    - libfreetype6-dev
    - libncurses5-dev
    - libxml2-dev
    - libxslt1-dev
    - libjpeg-dev
    - libpng12-dev
    - fail2ban
    - gettext
    - duplicity
    - python-boto
    - python-virtualenv
    - libpq-dev

- name: Create /srv/pyramid
  become: yes
  become_user: root
  file: path=/srv/pyramid state=directory

- name: Create a deploy location
  become: yes
  become_user: root
  file: path={{ deploy_location }} state=directory group=wsgi owner=wsgi mode="u=rwx,g=,o="

- name: Deploy Websauna application from a Git repository
  become: yes
  become_user: wsgi
  git: repo={{ git_repository }} dest={{deploy_location}} accept_hostkey=yes force=yes track_submodules=yes recursive=yes version={{ git_branch }}

- name: Check existence of virtualenv
  stat: path={{ deploy_location }}/venv
  register: has_virtualenv
  become: yes
  become_user: root

- name: Upgrade virtualenv to bugfixed versions
  become: yes
  become_user: root
  shell: sudo pip install -U virtualenv

- name: Create virtualenv for app using chosen Python
  when: has_virtualenv.stat.exists == False
  shell: virtualenv --python={{ python_interpreter }} {{deploy_location}}/venv
  become: yes
  become_user: wsgi

- name: Activate virtualenv on login
  become: yes
  become_user: wsgi
  lineinfile: dest=/home/{{ wsgi_user }}/.profile regexp='^source /srv' line='source {{ deploy_location }}/venv/bin/activate'

- name: Enter to deployment directory on login
  become: yes
  become_user: wsgi
  lineinfile: dest=/home/{{ wsgi_user }}/.profile regexp='^cd /srv' line='cd {{ deploy_location }}'

- name: Install Python packages
  become: yes
  become_user: wsgi
  pip: requirements={{deploy_location}}/requirements.txt virtualenv={{deploy_location}}/venv

- name: Install Websauna application Python package
  become: yes
  become_user: wsgi
  shell: cd {{deploy_location}} && ./venv/bin/python setup.py develop

- name: Deploy site config
  become: yes
  become_user: wsgi
  template: src=production.ini dest={{ deploy_location }}/conf/production.ini

- name: Deploy site secrets
  become: yes
  become_user: wsgi
  template: src={{ production_secrets_file }} dest={{ deploy_location }}/conf/production-secrets.ini

- name: Create logs folder
  become: yes
  become_user: wsgi
  file: path={{ deploy_location }}/logs state=directory

- name: Deploy uWSGI config
  become: yes
  become_user: wsgi
  template: src=uwsgi.ini dest={{ deploy_location }}/uwsgi.ini

- name: Deploy WSGI hander
  become: yes
  become_user: wsgi
  template: src=pyramid.wsgi dest={{ deploy_location }}/pyramid.wsgi

- name: Deploy supervisor config
  become: yes
  become_user: root
  template: src=supervisor.conf dest=/etc/supervisor/conf.d/site.conf

- name: Deploy Nginx
  become: yes
  become_user: root
  template: src=nginx.conf dest=/etc/nginx/sites-enabled/default
  notify:
    - nginx restart

- name: Start UWSGI
  become: yes
  become_user: root
  supervisorctl: name=uwsgi state=restarted

- name: Start celeryworker
  become: yes
  become_user: root
  supervisorctl: name=celeryworker state=restarted

- name: Start celerybeat
  become: yes
  become_user: root
  supervisorctl: name=celerybeat state=restarted



